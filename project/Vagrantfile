# -*- mode: ruby -*-
# vim: set ft=ruby :

vm_nodes = {
  "bkplog" => { :ip => "192.168.1.92" },
  "fe1"    => { :ip => "192.168.1.93" },
  "fe2"    => { :ip => "192.168.1.94" },
  "db1"    => { :ip => "192.168.1.95" },
  "db2"    => { :ip => "192.168.1.96" },
  "db3"    => { :ip => "192.168.1.97" }
}

Vagrant.configure("2") do |config|
  config.vm.box = "centos/7"
  config.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "/home/vagrant/.ssh/id_rsa.pub"
  config.vm.provision "shell", inline: "cat /home/vagrant/.ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys"
  config.vm.provision "shell", inline: "mkdir -p ~root/.ssh"
  config.vm.provision "shell", inline: "cp ~vagrant/.ssh/auth* ~root/.ssh"

  vm_nodes.each_with_index do |(hostname, cfg), index|
      config.vm.synced_folder ".", "/vagrant", disabled: true
      config.vm.define hostname do |node|
        # Set hostname for host
        node.vm.hostname = hostname
        node.vm.provider "virtualbox" do |v|
          # Set name for vm in Virtual Box
          v.name = hostname
        end
        node.vm.network :"public_network", ip: cfg[:ip], netmask: "255.255.255.0", bridge: "eth1"

        # If the host is the last element of the array do ansible provision
        if index == vm_nodes.size - 1
          config.vm.hostname = hostname
          node.vm.provision "ansible" do |ansible|
            ansible.inventory_path = "provisioning/inventory"
            ansible.limit = 'all'
            ansible.playbook = "provisioning/playbook.yml"
            ansible.raw_ssh_args = ['-o IdentityFile=~/.ssh/id_rsa',
                                    '-o GlobalKnownHostsFile=/dev/null',
                                    '-o UserKnownHostsFile=/dev/null',
                                    '-o StrictHostKeyChecking=no',
                                    '-o ServerAliveInterval=60']
          end
        end
      end
    end
  end
