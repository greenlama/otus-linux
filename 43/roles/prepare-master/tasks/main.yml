---
- name: Check if replication user exists
  command: >
    mysql
      -uroot
      -p'{{ mysql_password }}'
      -e 'SELECT user FROM mysql.user where user="{{ replication_user }}"'
  register: existed_replication_user

- name: Create replication user
  command: >
    mysql
      -uroot
      -p'{{ mysql_password }}'
      -e 'CREATE USER "{{ replication_user }}" IDENTIFIED BY "{{ replication_password }}"'
  when: existed_replication_user.stdout == ""

- name: Give privilegies to replication user
  command: >
    mysql
      -uroot
      -p'{{ mysql_password }}'
      -e 'GRANT REPLICATION SLAVE ON *.* TO "{{ replication_user }}"@"%" IDENTIFIED BY "{{ replication_password }}";'
  when: existed_replication_user.stdout == ""

- name: Save dump
  shell: |
    mysqldump > "{{ remote_dump_path }}" \
      -uroot \
      -p'{{ mysql_password }}' \
      {% if replication_ignore_tables is defined %}
      {% for ignore_table in replication_ignore_tables %}
      --ignore-table={{ ignore_table }} \
      {% endfor %}
      {% endif %}
      --all-databases \
      --triggers \
      --routines \
      --master-data
  args:
    creates: "{{ remote_dump_path }}"

- name: Fetch master backup from master server to host
  fetch:
    dest: "{{ local_dump_path }}"
    src: "{{ remote_dump_path }}"
    creates: "{{ local_dump_path }}"
    flat: yes
